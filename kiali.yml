---
apiVersion: v1
kind: Secret
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
type: Opaque
data:
  username: YWRtaW4=
  passphrase: YWRtaW4=
---

# Source: istio/charts/kiali/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
data:
  config.yaml: |
    server:
      port: 20001
    external_services:
      jaeger:
        url: http://jaeger-query:16686
      grafana:
        url: http://grafana:3000
---
# Source: istio/charts/kiali/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiali-service-account
  namespace: istio-system
  labels:
    app: kiali
    chart: kiali-1.0.6
    heritage: Tiller
    release: istio


---
# Source: istio/charts/kiali/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
rules:
  - apiGroups: ["", "apps", "autoscaling", "batch"]
    resources:
      - configmaps
      - cronjobs
      - deployments
      - endpoints
      - horizontalpodautoscalers
      - jobs
      - namespaces
      - nodes
      - pods
      - projects
      - services
      - statefulsets
      - replicasets
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups: ["config.istio.io"]
    resources:
      - apikeys
      - authorizations
      - checknothings
      - circonuses
      - deniers
      - fluentds
      - handlers
      - kubernetesenvs
      - kuberneteses
      - listcheckers
      - listentries
      - logentries
      - memquotas
      - metrics
      - opas
      - prometheuses
      - quotas
      - quotaspecbindings
      - quotaspecs
      - rbacs
      - reportnothings
      - rules
      - servicecontrolreports
      - servicecontrols
      - solarwindses
      - stackdrivers
      - statsds
      - stdios
    verbs:
      - delete
      - get
      - list
      - patch
      - watch
  - apiGroups: ["networking.istio.io"]
    resources:
      - destinationrules
      - gateways
      - serviceentries
      - virtualservices
    verbs:
      - delete
      - get
      - list
      - patch
      - watch

---
# Source: istio/charts/kiali/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-kiali-admin-role-binding-istio-system
  labels:
    app: kiali
    chart: kiali-1.0.6
    heritage: Tiller
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kiali
subjects:
  - kind: ServiceAccount
    name: kiali-service-account
    namespace: istio-system


---
# Source: istio/charts/kiali/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
spec:
  ports:
    - name: tcp
      protocol: TCP
      port: 20001
      name: http-kiali
  selector:
    app: kiali

---
# Source: istio/charts/kiali/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
    chart: kiali-1.0.6
    release: istio
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kiali
  template:
    metadata:
      name: kiali
      labels:
        app: kiali
      annotations:
        sidecar.istio.io/inject: "false"
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      serviceAccountName: kiali-service-account
      containers:
        - image: "docker.io/kiali/kiali:v0.12"
          name: kiali
          command:
            - "/opt/kiali/kiali"
            - "-config"
            - "/kiali-configuration/config.yaml"
            - "-v"
            - "4"
          env:
            - name: ACTIVE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVER_CREDENTIALS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: kiali
                  key: username
            - name: SERVER_CREDENTIALS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kiali
                  key: passphrase
            - name: PROMETHEUS_SERVICE_URL
              value: http://prometheus:9090
          volumeMounts:
            - name: kiali-configuration
              mountPath: "/kiali-configuration"
          resources:
            requests:
              cpu: 10m

      volumes:
        - name: kiali-configuration
          configMap:
            name: kiali

---